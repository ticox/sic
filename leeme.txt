Framefork  TecnoServi S.R.L

Vistas:


	* las vista en en ft se manejan de manera muy didactica y rese utiliza php para impresion de datos dinamicos .
	*por medio del objeto de sistema view se imprimen los datos en pantalla utilizando el metodo echo de php 

	ejemplo:

	<?php echo this->variable ?>

	las vista en ft estan dentro de un div class row en cual toma todo el ancho de la pantalla y por ende se recomienda comensar todas las vista dentro de div class col. el cual da 15px de margen derecho e izquierdo segun las hojas de estilo de bootstrap

controladores:

	los controladores son objetos que se encargan de gentionar el flujo de datos de la vista al controlador y viceversa. su sintaxis es como abitual mente como una clase pero tiene metodos que es nesesario conocer para el desarrollo.
		
		1)$this->_view->setJs() 
			parametro de entrada :
				entra un array con los nombres de los archivos js que se encuentren en la carpera js de la vista 
			parametro de salida:
			prepara e incerta en el objeto view los archivos js


		2)$this->_view->setCss() 
			parametro de entrada :
				entra un array con los nombres de los archivos css que se encuentren en la carpera css de la vista 
			parametro de salida:
			prepara e incerta en el objeto view los archivos css
		3) $this->_view->titulo
			define el nombre de la vista en la pestaña del navegador
		4)$this->loadModel('nombre del modelo');
			parametro de entrada :
				nombre del modelo
			parametro de salida:
			objeto instanciado;
		5)
		4)$this->includeModel('nombre del modelo');
			parametro de entrada :
				nombre del modelo
			parametro de salida:
			clase instanciada;
		5) $this->getLibrary('nombre de la libreria');
			parametro de entrada :
				nombre de la libreria
			parametro de salida:
			libreria incluida
		6)$this->redireccionar('nombre del controlador');
			parametro de entrada :
				nombre del controlador 
		7)$this->_view->renderizar('nombre del archivo phtml a cargar');	

modelos:
	
	los mdelos son los encargados de la comunicacion con la bd y las reglas de negocio. ademas de definir las regls de negocio y intecarccion con los demas modelos

	1)$this->_db->query($sql);
		es el encargado de prosesar la consulta a la bd y regresar los datos
	2)$Rs->fetchall()
		conbierte la respuesta en  un array asosiativo cuando regresan mas de dos tuplas
	3)$Rs->fetch()
		conbierte la respuesta en  un array asosiativo cuando regresan menos de una tuplas
	4)$datos->setFetchMode(PDO::FETCH_ASSOC);
		conbierte la respuesta en un array referencial, quitas las referencias numericas
	
-------------------------------------------------------------------------------------------


js:
-----------------------------------------------------------------------------
manejador de evento 1 


event=[click, keyup, keydown, keypress, change];
$(document).on('event', 'selector', function() {  
------accion
});
-----------------------------------------------------------------------------
manejador de evento 2 

function mifuncion(){}


-----------------------------------------------------------------------------
ajax:

$.get('ruta archivo php',{
	
	parametro1: valor1,
	parametro2: valor2 

}, function(data) {
		
		success

	},"json");

----------------------------------------------------------------------------------------------

librerias js

// generados de codigo QR 
//---------------------------------------------------------------------
//
// QR Code Generator for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//	http://www.opensource.org/licenses/mit-license.php
//
// The word 'QR Code' is registered trademark of
// DENSO WAVE INCORPORATED
//	http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------

la funcion create_qrcode debuelve una etiqueta img la cuan puede ser incertada en cualquira parte del documento

create_qrcode("123456");

ejemplo:

$(document).on('click', '#Generar_qr', function() {
	
	document.getElementById('qr').innerHTML = create_qrcode("123456");



});

cuando detectamos el evento click en el elemento Generar_qr, disparamos las funcion que se encarga de incertar la etiqueda img con la imagen qr que codifica el "123456" en el elemento "qr";



--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------


// scaner de codigo QR 
/*!
 * jQuery Plugin WebCodeCam-1.0.0
 * Author: Tóth András
 * Web: http://atandrastoth.co.uk
 * email: atandrastoth@gmail.com
 * Licensed under the MIT license
 */
/*
Included:
barcode decoder (DecoderWorker.js) -> https://github.com/EddieLa/BarcodeReader/blob/master/src/DecoderWorker.js
qr-decoder (qrcodelib.js) -> https://github.com/LazarSoft/jsqrcode
*/


la funcion scaner_qr('.xxx'); 

recibe como parametro el selector donde se montara la img de camara que leera el codigo de barra en cuestion

salida rellena una variable gloval llamada "resTextQR" con el texto que lea del codigo QR.

ejemplo:

scaner_qr('.xxx');

.xxx si es una clase
#xxx si es un id

respuesta:

monta la camara en el id o clases especificada y comienza un buche para determinar la lectura 

salida:

resTextQR= texto de la QR;


--------------------------------------------------------------------------------------------------------------
